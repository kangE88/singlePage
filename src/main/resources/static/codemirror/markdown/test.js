// Initiate ModeTest and set defaults
var MT=ModeTest;MT.modeName="markdown",MT.modeOptions={},MT.testMode("plainText","foo",[null,"foo"]),MT.testMode("codeBlocksUsing4Spaces","    foo",[null,"    ","comment","foo"]),MT.testMode("codeBlocksUsing1Tab","	foo",[null,"	","comment","foo"]),MT.testMode("inlineCodeUsingBackticks","foo `bar`",[null,"foo ","comment","`bar`"]),MT.testMode("unclosedBackticks","foo `bar",[null,"foo ","comment","`bar"]),MT.testMode("doubleBackticks","``foo ` bar``",["comment","``foo ` bar``"]),MT.testMode("consecutiveBackticks","`foo```bar`",["comment","`foo```bar`"]),MT.testMode("consecutiveBackticks","`foo```bar` hello `world`",["comment","`foo```bar`",null," hello ","comment","`world`"]),MT.testMode("unclosedBackticks","``foo ``` bar` hello",["comment","``foo ``` bar` hello"]),MT.testMode("closedBackticks","``foo ``` bar` hello`` world",["comment","``foo ``` bar` hello``",null," world"]),MT.testMode("atxH1","# foo",["header","# foo"]),MT.testMode("atxH2","## foo",["header","## foo"]),MT.testMode("atxH3","### foo",["header","### foo"]),MT.testMode("atxH4","#### foo",["header","#### foo"]),MT.testMode("atxH5","##### foo",["header","##### foo"]),MT.testMode("atxH6","###### foo",["header","###### foo"]),MT.testMode("atxH6NotH7","####### foo",["header","####### foo"]),MT.testMode("setextH1","foo\n=",[null,"foo","header","="]),MT.testMode("setextH1","foo\n===",[null,"foo","header","==="]),MT.testMode("setextH2","foo\n-",[null,"foo","header","-"]),MT.testMode("setextH2","foo\n---",[null,"foo","header","---"]),MT.testMode("blockquoteSpace","> foo",["quote","> foo"]),MT.testMode("blockquoteNoSpace",">foo",["quote",">foo"]),MT.testMode("blockquoteThenParagraph",">foo\n\nbar",["quote",">foo",null,"bar"]),MT.testMode("multiBlockquoteLazy",">foo\nbar",["quote",">foo","quote","bar"]),MT.testMode("multiBlockquoteLazyThenParagraph",">foo\nbar\n\nhello",["quote",">foo","quote","bar",null,"hello"]),MT.testMode("multiBlockquote",">foo\n>bar",["quote",">foo","quote",">bar"]),MT.testMode("multiBlockquoteThenParagraph",">foo\n>bar\n\nhello",["quote",">foo","quote",">bar",null,"hello"]),MT.testMode("listAsterisk","* foo\n* bar",["string","* foo","string","* bar"]),MT.testMode("listPlus","+ foo\n+ bar",["string","+ foo","string","+ bar"]),MT.testMode("listDash","- foo\n- bar",["string","- foo","string","- bar"]),MT.testMode("listNumber","1. foo\n2. bar",["string","1. foo","string","2. bar"]),MT.testMode("listAsteriskFormatting","* *foo* bar\n\n* **foo** bar\n\n* ***foo*** bar\n\n* `foo` bar",["string","* ","string em","*foo*","string"," bar","string","* ","string strong","**foo**","string"," bar","string","* ","string strong","**","string emstrong","*foo**","string em","*","string"," bar","string","* ","string comment","`foo`","string"," bar"]),MT.testMode("listPlusFormatting","+ *foo* bar\n\n+ **foo** bar\n\n+ ***foo*** bar\n\n+ `foo` bar",["string","+ ","string em","*foo*","string"," bar","string","+ ","string strong","**foo**","string"," bar","string","+ ","string strong","**","string emstrong","*foo**","string em","*","string"," bar","string","+ ","string comment","`foo`","string"," bar"]),MT.testMode("listDashFormatting","- *foo* bar\n\n- **foo** bar\n\n- ***foo*** bar\n\n- `foo` bar",["string","- ","string em","*foo*","string"," bar","string","- ","string strong","**foo**","string"," bar","string","- ","string strong","**","string emstrong","*foo**","string em","*","string"," bar","string","- ","string comment","`foo`","string"," bar"]),MT.testMode("listNumberFormatting","1. *foo* bar\n\n2. **foo** bar\n\n3. ***foo*** bar\n\n4. `foo` bar",["string","1. ","string em","*foo*","string"," bar","string","2. ","string strong","**foo**","string"," bar","string","3. ","string strong","**","string emstrong","*foo**","string em","*","string"," bar","string","4. ","string comment","`foo`","string"," bar"]),MT.testMode("listParagraph","* foo\n\n* bar",["string","* foo","string","* bar"]),MT.testMode("listMultiParagraph","* foo\n\n* bar\n\n    hello",["string","* foo","string","* bar",null,"    ","string","hello"]),MT.testMode("listMultiParagraphExtra","* foo\n\n* bar\n\n\n    hello",["string","* foo","string","* bar",null,"    ","string","hello"]),MT.testMode("listMultiParagraphExtraSpace","* foo\n\n* bar\n\n     hello\n\n    world",["string","* foo","string","* bar",null,"     ","string","hello",null,"    ","string","world"]),MT.testMode("listTab","* foo\n\n* bar\n\n	hello",["string","* foo","string","* bar",null,"	","string","hello"]),MT.testMode("listNoIndent","* foo\n\n* bar\n\nhello",["string","* foo","string","* bar",null,"hello"]),MT.testMode("blockquote","* foo\n\n* bar\n\n    > hello",["string","* foo","string","* bar",null,"    ","string quote","> hello"]),MT.testMode("blockquoteCode","* foo\n\n* bar\n\n        > hello\n\n    world",["string","* foo","string","* bar",null,"        ","comment","> hello",null,"    ","string","world"]),MT.testMode("blockquoteCodeText","* foo\n\n    bar\n\n        hello\n\n    world",["string","* foo",null,"    ","string","bar",null,"        ","comment","hello",null,"    ","string","world"]),MT.testMode("listAsteriskNested","* foo\n\n    * bar",["string","* foo",null,"    ","string","* bar"]),MT.testMode("listPlusNested","+ foo\n\n    + bar",["string","+ foo",null,"    ","string","+ bar"]),MT.testMode("listDashNested","- foo\n\n    - bar",["string","- foo",null,"    ","string","- bar"]),MT.testMode("listNumberNested","1. foo\n\n    2. bar",["string","1. foo",null,"    ","string","2. bar"]),MT.testMode("listMixed","* foo\n\n    + bar\n\n        - hello\n\n            1. world",["string","* foo",null,"    ","string","+ bar",null,"        ","string","- hello",null,"            ","string","1. world"]),MT.testMode("listBlockquote","* foo\n\n    + bar\n\n        > hello",["string","* foo",null,"    ","string","+ bar",null,"        ","quote string","> hello"]),MT.testMode("listCode","* foo\n\n    + bar\n\n            hello",["string","* foo",null,"    ","string","+ bar",null,"            ","comment","hello"]),MT.testMode("listCodeText","* foo\n\n        bar\n\nhello",["string","* foo",null,"        ","comment","bar",null,"hello"]),MT.testMode("hrSpace","* * *",["hr","* * *"]),MT.testMode("hr","***",["hr","***"]),MT.testMode("hrLong","*****",["hr","*****"]),MT.testMode("hrSpaceDash","- - -",["hr","- - -"]),MT.testMode("hrDashLong","---------------------------------------",["hr","---------------------------------------"]),MT.testMode("linkTitle",'[foo](http://example.com/ "bar") hello',["link","[foo]","string",'(http://example.com/ "bar")',null," hello"]),MT.testMode("linkNoTitle","[foo](http://example.com/) bar",["link","[foo]","string","(http://example.com/)",null," bar"]),MT.testMode("linkReference","[foo][bar] hello",["link","[foo]","string","[bar]",null," hello"]),MT.testMode("linkReferenceSpace","[foo] [bar] hello",["link","[foo]",null," ","string","[bar]",null," hello"]),MT.testMode("linkReferenceDoubleSpace","[foo]  [bar] hello",[null,"[foo]  [bar] hello"]),MT.testMode("linkImplicit","[foo][] hello",["link","[foo]","string","[]",null," hello"]),MT.testMode("labelNoTitle","[foo]: http://example.com/",["link","[foo]:",null," ","string","http://example.com/"]),MT.testMode("labelSpaceTitle",'[foo bar]: http://example.com/ "hello"',["link","[foo bar]:",null," ","string",'http://example.com/ "hello"']),MT.testMode("labelDoubleTitle",'[foo bar]: http://example.com/ "hello" "world"',["link","[foo bar]:",null," ","string",'http://example.com/ "hello"',null,' "world"']),MT.testMode("labelTitleDoubleQuotes",'[foo]: http://example.com/  "bar"',["link","[foo]:",null," ","string",'http://example.com/  "bar"']),MT.testMode("labelTitleSingleQuotes","[foo]: http://example.com/  'bar'",["link","[foo]:",null," ","string","http://example.com/  'bar'"]),MT.testMode("labelTitleParenthese","[foo]: http://example.com/  (bar)",["link","[foo]:",null," ","string","http://example.com/  (bar)"]),MT.testMode("labelTitleInvalid","[foo]: http://example.com/ bar",["link","[foo]:",null," ","string","http://example.com/",null," bar"]),MT.testMode("labelLinkAngleBrackets",'[foo]: <http://example.com/>  "bar"',["link","[foo]:",null," ","string",'<http://example.com/>  "bar"']),MT.testMode("labelTitleNextDoubleQuotes",'[foo]: http://example.com/\n"bar" hello',["link","[foo]:",null," ","string","http://example.com/","string",'"bar"',null," hello"]),MT.testMode("labelTitleNextSingleQuotes","[foo]: http://example.com/\n'bar' hello",["link","[foo]:",null," ","string","http://example.com/","string","'bar'",null," hello"]),MT.testMode("labelTitleNextParenthese","[foo]: http://example.com/\n(bar) hello",["link","[foo]:",null," ","string","http://example.com/","string","(bar)",null," hello"]),MT.testMode("labelTitleNextMixed",'[foo]: http://example.com/\n(bar" hello',["link","[foo]:",null," ","string","http://example.com/",null,'(bar" hello']),MT.testMode("linkWeb","<http://example.com/> foo",["link","<http://example.com/>",null," foo"]),MT.testMode("linkEmail","<user@example.com> foo",["link","<user@example.com>",null," foo"]),MT.testMode("emAsterisk","*foo* bar",["em","*foo*",null," bar"]),MT.testMode("emUnderscore","_foo_ bar",["em","_foo_",null," bar"]),MT.testMode("emInWordAsterisk","foo*bar*hello",[null,"foo","em","*bar*",null,"hello"]),MT.testMode("emInWordUnderscore","foo_bar_hello",[null,"foo","em","_bar_",null,"hello"]),MT.testMode("emEscapedBySpaceIn","foo _bar _ hello_ world",[null,"foo ","em","_bar _ hello_",null," world"]),MT.testMode("emEscapedBySpaceOut","foo _ bar_hello_world",[null,"foo _ bar","em","_hello_",null,"world"]),MT.testMode("emIncompleteAsterisk","foo *bar",[null,"foo ","em","*bar"]),MT.testMode("emIncompleteUnderscore","foo _bar",[null,"foo ","em","_bar"]),MT.testMode("strongAsterisk","**foo** bar",["strong","**foo**",null," bar"]),MT.testMode("strongUnderscore","__foo__ bar",["strong","__foo__",null," bar"]),MT.testMode("emStrongAsterisk","*foo**bar*hello** world",["em","*foo","emstrong","**bar*","strong","hello**",null," world"]),MT.testMode("emStrongUnderscore","_foo__bar_hello__ world",["em","_foo","emstrong","__bar_","strong","hello__",null," world"]),MT.testMode("emStrongMixed","_foo**bar*hello__ world",["em","_foo","emstrong","**bar*hello__ world"]),MT.testMode("emStrongMixed","*foo__bar_hello** world",["em","*foo","emstrong","__bar_hello** world"]),MT.testMode("escapeBacktick","foo \\`bar\\`",[null,"foo \\`bar\\`"]),MT.testMode("doubleEscapeBacktick","foo \\\\`bar\\\\`",[null,"foo \\\\","comment","`bar\\\\`"]),MT.testMode("escapeAsterisk","foo \\*bar\\*",[null,"foo \\*bar\\*"]),MT.testMode("doubleEscapeAsterisk","foo \\\\*bar\\\\*",[null,"foo \\\\","em","*bar\\\\*"]),MT.testMode("escapeUnderscore","foo \\_bar\\_",[null,"foo \\_bar\\_"]),MT.testMode("doubleEscapeUnderscore","foo \\\\_bar\\\\_",[null,"foo \\\\","em","_bar\\\\_"]),MT.testMode("escapeHash","\\# foo",[null,"\\# foo"]),MT.testMode("doubleEscapeHash","\\\\# foo",[null,"\\\\# foo"]);